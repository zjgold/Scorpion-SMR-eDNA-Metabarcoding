"0","PREDERROR <- function(mymodel, mydataset, outcomename){"
"0"," "
"0","  if (""stanreg"" %in% class(mymodel)) {"
"0","    predict_temp <- posterior_predict(mymodel, "
"0","                                      mydataset,"
"0","                                      seed = 123) %>%"
"0","      colMeans()"
"0","  } else {"
"0","    predict_temp <- predict(mymodel,"
"0","                            mydataset,"
"0","                            type = ""response"""
"0","    )"
"0","  }"
"0","  "
"0","  if(sum(predict_temp > 0.5) == 0){"
"0","    confusion_mat <-   cbind("
"0","                        table(unlist(mydataset[,outcomename])), "
"0","                        c('FALSE' = length(predict_temp), 'TRUE' = 0)"
"0","                        )"
"0","  } else {"
"0","    confusion_mat <- table(unlist(mydataset[,outcomename]), predict_temp > 0.5) # create confusion matrix"
"0","  }"
"0","  if(dim(confusion_mat)[[2]] == 1){"
"0","    confusion_mat <- cbind(c('FALSE' = 0),confusion_mat)"
"0","  }"
"0","  "
"0","  accuracy <- sum(diag(confusion_mat)) / sum(confusion_mat) "
"0","  TP <- confusion_mat[2,2]"
"0","  TN <- confusion_mat[1,1]"
"0","  FP <- confusion_mat[1,2]"
"0","  FN <- confusion_mat[2,1]"
"0","  FNR <- FN/sum(confusion_mat[2,])"
"0","  FPR <- FP/sum(confusion_mat[1,])"
"0","  TPR <- as.numeric(TP/sum(confusion_mat[2,])) #sensitivity"
"0","  TNR <- as.numeric(TN/sum(confusion_mat[1,])) #specificity"
"0","  "
"0","  return("
"0","    list("
"0","      ""Accuracy"" = accuracy,"
"0","      ""TruePositiveRate"" = TPR,"
"0","      ""TrueNegativeRate"" = TNR"
"0","    )"
"0","  )"
"0","}"
