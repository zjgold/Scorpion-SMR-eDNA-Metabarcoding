"0","hash.key.updated$number %>% unique() -> total_taxa"
"0","ASV.nested$Step3.tibble[[1]] %>% "
"0","  mutate(miseq = ASV.nested$Miseq_run[[1]]) %>% "
"0","  unite(miseq,sample, col=""Sample"") %>% "
"0","  left_join(hash.key.updated) %>% "
"0","  dplyr::group_by(number,Sample) %>%"
"0","  dplyr::summarise(nReads=sum(nReads)) %>% "
"0","  spread(., Sample, nReads) %>% #convert to wide data format"
"0","  replace(is.na(.), 0) -> barcode_1_pre_df"
"2","Joining, by = ""seq_number""
"
"2","`summarise()` regrouping output by 'number' (override with `.groups` argument)
"
"0","barcode_1_pre_df$number %>%  unique() -> barcode_1_pre_df_taxa"
"0","total_kept_taxa <- (barcode_1_pre_df_taxa) %>% unique()"
"0","if (rlang::is_empty(setdiff(total_kept_taxa,barcode_1_pre_df_taxa))) {"
"0","  barcode_1_pre_df %>% ungroup() %>% "
"0","    arrange(number) -> barcode_1_pre_df"
"0","} else {"
"0","  barcode_1_pre_df %>% ungroup() %>% "
"0","    add_row(number=setdiff(total_kept_taxa,barcode_1_pre_df_taxa)) %>% "
"0","    arrange(number) %>% "
"0","    replace(is.na(.), 0) -> barcode_1_pre_df"
"0","}"
"0","barcode_1_pre_df <- as.data.frame(barcode_1_pre_df)"
"0","row.names(barcode_1_pre_df) <- barcode_1_pre_df$number"
"0","barcode_1_pre_df %>% ungroup() %>% dplyr::select(-number) -> barcode_1_pre_df"
"0","####First, we want to create proportions by dividing by the rowsums:"
"0","####we could do this with sweep() or mutate_all() or other ways, but using vegan:"
"0","barcode_1_prop <- decostand(barcode_1_pre_df, method = ""total"", MARGIN = 2)"
"0","####Second, we want to ask how the proprortion for each species has changed across columns (samples). "
"0","####We do this by scaling everything to the max observed in each row. "
"0","####to do this WITHIN a dataset, we could just do (again, using vegan):"
"0","barcode_1_prop_index <- decostand(barcode_1_prop, method = ""max"", MARGIN = 1)"
"0","####This gives us an index between 0 and 1 for each species in each dataset.  "
"0","####But if we want to combine datasets, this second step has to happen in the combined dataset, so it all gets scaled to 0-1.  "
"0","####easy enough:"
"0","combined_index <- decostand(cbind(barcode_1_prop), method = ""max"", MARGIN = 1)"
"0","####How both datasets are combined, on a common, comparable scale."
"0","### Output Read Count Data"
"0","pre_results_reads = cbind(barcode_1_prop)"
"0","hash.key.updated.2 <- hash.key.updated[!duplicated(hash.key.updated$number), ]"
"0","pre_results_reads$number <- rownames(pre_results_reads)"
"0","pre_results_reads %>% "
"0","  left_join(hash.key.updated.2, by=""number"") %>% "
"0","  dplyr::select(-number,-seq_number) -> pre_results_reads"
"0","saveRDS(pre_results_reads,file=here(""decontam"",""Output_R"",""pre_occupancy_results_sum.taxonomy_tech_reps_separate_read_counts.RDS""))"
"0","write_csv(pre_results_reads ,here(""decontam"",""Output_csv"",""pre_occupancy_results_sum.taxonomy_tech_reps_separate_read_counts.csv""))"
