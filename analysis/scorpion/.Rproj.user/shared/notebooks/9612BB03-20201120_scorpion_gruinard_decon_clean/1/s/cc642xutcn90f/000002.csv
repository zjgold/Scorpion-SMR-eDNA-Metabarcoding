"0","####Arrange Blank Samples to be the first 3 columns"
"0","##### Identify blank samples"
"0","if (is.null(ASV.nested$Blanks[[1]])){"
"0","  ASV.nested$Step.2.low.read.depth[[1]] %>% "
"0","    arrange(desc(nReads)) %>% "
"0","    slice(1) %>% "
"0","    mutate(., nReads =1, sample=""Fake_blank_1"") -> test1"
"0","  tibble(sample=c(""Fake_blank_1""), seq_number=c(""fake_asv_1""),nReads =c(10000)) -> blank_ASVs_1"
"0","  full_join(test1,blank_ASVs_1) -> blank_ASVs_1"
"0","  #### Number of Blanks"
"0","  blank_ASVs_1$sample %>% unique() %>% length() -> blank_num"
"0","  #### Columns to Ignore for Grouping"
"0","  blank_ASVs_1$sample %>% unique() -> blank_samples"
"0","} else{"
"0","  ASV.nested$Blanks[[1]] %>% "
"0","    dplyr::select(sample,seq_number, nReads) -> blank_ASVs_1"
"0","  #### Number of Blanks"
"0","  ASV.nested$Blanks[[1]]$sample %>% unique() %>% length() -> blank_num"
"0","  #### Columns to Ignore for Grouping"
"0","  ASV.nested$Blanks[[1]]$sample %>% unique() -> blank_samples"
"0","}"
"0","##### Add blank samples"
"0","rbind(blank_ASVs_1, ASV.nested$Step.2.low.read.depth[[1]]) -> step.3_barcode1"
"0","#### Pivot to Wide format"
"0","step.3_barcode1 %>% "
"0","  pivot_wider(names_from=sample, values_from=nReads, values_fill = list(nReads =0)) -> step.3_barcode1_wide"
"0","step.3_barcode1_wide %>%"
"0","  left_join(hash.key)  %>% as.data.frame -> step.3_barcode1_wide"
"2","Joining, by = ""seq_number""
"
"0","### Identify Groups"
"0","#### Number of Samples"
"0","ASV.nested$Step.2.low.read.depth[[1]]$sample %>% unique() %>% length() -> sample_num"
"0","append(blank_samples, c(""sum.taxonomy"",""seq_number"")) -> col_delete"
"0","#### Assign Groups -> should be replaced with pre-defined groups in the metadata file"
"0","if(som_level ==""double""){"
"0","colnames(step.3_barcode1_wide) %>%  as.data.frame() %>% "
"0","  filter(., !(. %in% col_delete)) %>% "
"0","  mutate(., New_name=.) %>% "
"0","  left_join(metadata)  %>%"
"0","  dplyr::select(New_name,Site,Bio_rep) %>% "
"0","  distinct() %>% "
"0","  group_by(Site,Bio_rep) %>% "
"0","    dplyr::count() -> sample_counter"
"0","} else{"
"0","  colnames(step.3_barcode1_wide) %>%  as.data.frame() %>% "
"0","    filter(., !(. %in% col_delete)) %>% "
"0","    mutate(., New_name=.) %>% "
"0","    left_join(metadata, by=""New_name"")  %>%"
"0","    dplyr::select(New_name,Site) %>% "
"0","    distinct() %>% "
"0","    group_by(Site) %>%"
"0","    dplyr::count() -> sample_counter"
"0","}"
"2","Joining, by = ""New_name""
"
