"0","#Format 2 level hierarchical patterns"
"0","ASV.nested %>% "
"0","  dplyr::select(Step3.tibble) %>% "
"0","  unnest(Step3.tibble) %>% # This stage is a long table"
"0","  filter(!sample %in% Taylor_samples)  %>% #remove Taylors samples at this stage"
"0","  ungroup() %>% "
"0","  mutate(nReads = 1) %>% "
"0","  left_join(metadata, by= c(""sample""=""New_name"")) %>% "
"0","  dplyr::select(seq_number, Site, Bio_rep, Tech_rep, nReads) %>% "
"0","  group_by(Site) %>% "
"0","  mutate(., K = n_distinct(Tech_rep)) -> data_som_int"
"0","data_som_int %>% "
"0","pivot_wider(values_from = nReads, names_from = Tech_rep, names_prefix = ""Tech"") %>% "
"0","  ungroup() %>% "
"0","  mutate (ndetections = rowSums(dplyr::select(., starts_with(""Tech"")),na.rm = TRUE)) %>% "
"0","  dplyr::select(., !starts_with(""Tech""))  %>% "
"0","  pivot_wider(values_from = ndetections, names_from = Bio_rep, names_prefix = ""Bio_rep"") -> data_tech_summarized"
"0","  "
"0","#Now need to try to reduce the number of repeated tests. "
"0","#Many species have identical patterns of presence (e.g. pattern of technical replicates a species was detected)"
"0","data_tech_summarized %>% "
"0","  unite(repetition.level,starts_with(""Bio_rep""), sep = ""."", remove = FALSE) -> Pattern.of.presence_tech"
"0","#Select unique patterns"
"0","Pattern.of.presence_tech %>% "
"0","  group_by(repetition.level) %>% "
"0","  slice(1) -> unique_patterns"
"0","#Format for STAN Model"
"0","# K is number of technical replicates for each Biological replicate"
"0","# ndetections is the number of times a species was detected out of K trials"
"0","unique_patterns %>% "
"0","  pivot_longer(., cols=starts_with(""Bio_rep""), names_to=""Bio_rep"",values_to=""ndetections"") %>% "
"0","  filter(., !is.na(ndetections)) %>% "
"0","  mutate(Bio_rep =  str_replace_all(Bio_rep, ""Bio_rep"","""")) -> unique_data"
"0","#Create unique identifier for species; for use in hierarchical modeling"
"0","#STAN model requires species names to be numbers."
"0","SS_species <- unite(data = unique_data,"
"0","                    col = SS_species,"
"0","                    c(""seq_number"")"
"0",") %>% pull(SS_species)"
"0","unique_data$Species <- match(SS_species, unique(SS_species)) #index for unique site-species combinations"
"0","#Create unique identifier for combinations of site-biological_rep-species; for use in hierarchical modeling"
"0","SDS <- unite(data = unique_data,"
"0","             col = SDS,"
"0","             c(""Site"", ""Bio_rep"", ""seq_number"")"
"0",") %>% pull(SDS)"
"0","unique_data$SiteDateSpecies <- match(SDS, unique(SDS)) #index for unique site-date-species combinations"
"0","#Create unique identifier for combinations of site-species; for use in hierarchical modeling"
"0","SS <- unite(data = unique_data,"
"0","            col = SS,"
"0","            c(""Site"", ""seq_number"")"
"0",") %>% pull(SS)"
"0","unique_data$SiteSpecies <- match(SS, unique(SS)) #index for unique site-species combinations"
"0","#Fix names to match STAN model format"
"0","unique_data %>%"
"0","  mutate(., N= ndetections) %>%"
"0","  dplyr::select(-ndetections)-> unique_data"
"0","unique_data$N <- as.numeric(unique_data$N)"
